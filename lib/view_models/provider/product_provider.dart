//
//
// import 'package:flutter/material.dart';
//
// import '../../models/product/product_model.dart';
// import '../../services/firebase_service.dart';
//
// class ProductProvider with ChangeNotifier {
//   final FirebaseService _firebaseService = FirebaseService();
//   List<Product> _products = [];
//
//   List<Product> get products => _products;
//
//   Future<void> addProduct(String name, double price) async {
//     final product = Product(id: '', name: name, price: price);
//     await _firebaseService.addProduct('sellerId', product.toJson()); // Replace 'sellerId' with actual ID
//     fetchProducts();
//   }
//
//   Future<void> fetchProducts() async {
//     final data = await _firebaseService.fetchProducts('sellerId'); // Replace 'sellerId' with actual ID
//     _products = data.map((json) => Product.fromJson(json, 'id')).toList();
//     notifyListeners();
//   }
// }


import 'package:flutter/material.dart';

import '../../models/product/product_model.dart';
import '../../services/firebase_service.dart';

class ProductProvider with ChangeNotifier {
  final FirebaseService _firebaseService = FirebaseService();
  List<Product> _products = [];

  List<Product> get products => _products;

  // Method to add a product
  Future<void> addProduct({
    required String name,
    required double price,
    required String description,
    required double discount,
    required int stock,
    required int quantity,
    required String imageUrl, // Added imageUrl field
  }) async {
    // Create a Product object with all the fields
    final product = Product(
      id: '', // ID will be generated by Firestore
      name: name,
      price: price,
      description: description,
      discount: discount,
      stock: stock,
      quantity: quantity,
      imageUrl: imageUrl, // Assign imageUrl
    );

    // // Save product to Firestore using FirebaseService
    // await _firebaseService.addProduct('sellerId', product.toJson()); // Replace 'sellerId' with actual seller ID
    // fetchProducts(); // Refresh the product list after adding
  }

  // Method to fetch products
  Future<void> fetchProducts() async {
    // Fetch product data from Firestore
    final data = await _firebaseService.fetchProducts('sellerId'); // Replace 'sellerId' with actual seller ID

    // Convert each JSON object into a Product instance
    _products = data.map((json) => Product.fromJson(json, json['id'] ?? '')).toList();
    notifyListeners(); // Notify listeners to rebuild UI
  }
}
